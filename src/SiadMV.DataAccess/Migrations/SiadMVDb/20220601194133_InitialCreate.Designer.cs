// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiadMV.DataAccess.Contexts;

namespace SiadMV.DataAccess.Migrations.SiadMVDb
{
    [DbContext(typeof(SiadMVDbContext))]
    [Migration("20220601194133_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SiadMV.DataAccess.Models.SiadMVDb.CommonExpression", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("CommonExpression");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b5b835bc-ac3e-4feb-aecd-7efbe905e506"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(5023),
                            Description = "base de datos"
                        },
                        new
                        {
                            Id = new Guid("e16cf954-7f86-40d4-b53c-0025371b986e"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(5184),
                            Description = "mysql"
                        },
                        new
                        {
                            Id = new Guid("6b7d1039-3cd0-492d-8f8c-f44c4258433b"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(5194),
                            Description = "usuario"
                        },
                        new
                        {
                            Id = new Guid("91db24af-ab97-44c9-90bd-5149cf4c4220"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(5197),
                            Description = "autenticación"
                        },
                        new
                        {
                            Id = new Guid("57840dab-205c-44b3-afd2-c38c56e03378"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(5200),
                            Description = "almacenamiento"
                        },
                        new
                        {
                            Id = new Guid("04fbf285-0439-4e9d-b986-86d5386c83bb"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(5203),
                            Description = "rapida"
                        },
                        new
                        {
                            Id = new Guid("14c18a5b-94d4-4f5e-9d96-fffd77696b89"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(5206),
                            Description = "backend"
                        });
                });

            modelBuilder.Entity("SiadMV.DataAccess.Models.SiadMVDb.CommonExpressionKeyFact", b =>
                {
                    b.Property<Guid>("CommonExpressionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("KeyFactId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.HasKey("CommonExpressionId", "KeyFactId");

                    b.HasIndex("KeyFactId");

                    b.ToTable("CommonExpressionKeyFact");

                    b.HasData(
                        new
                        {
                            CommonExpressionId = new Guid("91db24af-ab97-44c9-90bd-5149cf4c4220"),
                            KeyFactId = new Guid("4c338983-e027-4b32-9b37-19f9aa088174"),
                            Id = new Guid("ebe166db-d196-4055-a095-58aa19c34f72")
                        },
                        new
                        {
                            CommonExpressionId = new Guid("6b7d1039-3cd0-492d-8f8c-f44c4258433b"),
                            KeyFactId = new Guid("4c338983-e027-4b32-9b37-19f9aa088174"),
                            Id = new Guid("bd38c888-fb1e-49e7-bdb4-2ef7f398eff1")
                        },
                        new
                        {
                            CommonExpressionId = new Guid("b5b835bc-ac3e-4feb-aecd-7efbe905e506"),
                            KeyFactId = new Guid("d86f8287-40e6-4343-819f-adeb0104546c"),
                            Id = new Guid("c88cf859-d473-45c4-8b99-46ce6e180189")
                        },
                        new
                        {
                            CommonExpressionId = new Guid("e16cf954-7f86-40d4-b53c-0025371b986e"),
                            KeyFactId = new Guid("d86f8287-40e6-4343-819f-adeb0104546c"),
                            Id = new Guid("7126efaa-a67f-4b8c-9a76-c312c22dc334")
                        },
                        new
                        {
                            CommonExpressionId = new Guid("57840dab-205c-44b3-afd2-c38c56e03378"),
                            KeyFactId = new Guid("d86f8287-40e6-4343-819f-adeb0104546c"),
                            Id = new Guid("49992ff4-064f-4918-8d2f-2a3e3f94ee8f")
                        },
                        new
                        {
                            CommonExpressionId = new Guid("91db24af-ab97-44c9-90bd-5149cf4c4220"),
                            KeyFactId = new Guid("a414a9d7-836d-451e-8b11-950ff2d8f8ba"),
                            Id = new Guid("5dd73df5-a3ef-4316-b722-717c22bb0472")
                        },
                        new
                        {
                            CommonExpressionId = new Guid("6b7d1039-3cd0-492d-8f8c-f44c4258433b"),
                            KeyFactId = new Guid("a414a9d7-836d-451e-8b11-950ff2d8f8ba"),
                            Id = new Guid("ffd80884-6609-4d68-81ff-1c033e4a6b8d")
                        },
                        new
                        {
                            CommonExpressionId = new Guid("04fbf285-0439-4e9d-b986-86d5386c83bb"),
                            KeyFactId = new Guid("b8776aa6-31b4-4125-8bfe-0a4e07d45d1b"),
                            Id = new Guid("c9633ccf-ac22-4dbc-9998-162f7caeb92f")
                        },
                        new
                        {
                            CommonExpressionId = new Guid("04fbf285-0439-4e9d-b986-86d5386c83bb"),
                            KeyFactId = new Guid("81aeed67-9b3b-410b-baa6-706b47a5cc0e"),
                            Id = new Guid("bcfcd082-c81a-435e-bb83-152594c39343")
                        },
                        new
                        {
                            CommonExpressionId = new Guid("14c18a5b-94d4-4f5e-9d96-fffd77696b89"),
                            KeyFactId = new Guid("c5b310a8-5f6b-4fa4-ac36-c36734c5cabb"),
                            Id = new Guid("bb9ac5c4-259b-4153-8dec-008e52514833")
                        },
                        new
                        {
                            CommonExpressionId = new Guid("14c18a5b-94d4-4f5e-9d96-fffd77696b89"),
                            KeyFactId = new Guid("e3d83a30-5707-4436-a79c-f8b6e83d5619"),
                            Id = new Guid("289783b9-bc3d-4a11-a187-5f9390c93e48")
                        });
                });

            modelBuilder.Entity("SiadMV.DataAccess.Models.SiadMVDb.KeyFact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("KeyFact");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c338983-e027-4b32-9b37-19f9aa088174"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(3803),
                            Description = "autenticacion"
                        },
                        new
                        {
                            Id = new Guid("d86f8287-40e6-4343-819f-adeb0104546c"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(4074),
                            Description = "sql"
                        },
                        new
                        {
                            Id = new Guid("a414a9d7-836d-451e-8b11-950ff2d8f8ba"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(4086),
                            Description = "autorizacion"
                        },
                        new
                        {
                            Id = new Guid("b8776aa6-31b4-4125-8bfe-0a4e07d45d1b"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(4090),
                            Description = "procesamiento"
                        },
                        new
                        {
                            Id = new Guid("81aeed67-9b3b-410b-baa6-706b47a5cc0e"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(4093),
                            Description = "memoria ram"
                        },
                        new
                        {
                            Id = new Guid("c5b310a8-5f6b-4fa4-ac36-c36734c5cabb"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(4096),
                            Description = ".net"
                        },
                        new
                        {
                            Id = new Guid("e3d83a30-5707-4436-a79c-f8b6e83d5619"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(4098),
                            Description = "framework"
                        });
                });

            modelBuilder.Entity("SiadMV.DataAccess.Models.SiadMVDb.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c5f06e0-e33f-40fb-a43e-4224addd1671"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(4491),
                            Description = "Pregunta de autenticación 1"
                        },
                        new
                        {
                            Id = new Guid("4b72b1b6-f14b-43a0-8cee-b3824114eb35"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(4676),
                            Description = "Pregunta de autenticación 1"
                        },
                        new
                        {
                            Id = new Guid("b6fd88b0-0f5e-4b4b-ad4c-c45410d0379b"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(4687),
                            Description = "Pregunta de autorizacion"
                        },
                        new
                        {
                            Id = new Guid("68a5f73d-89d3-4eae-a229-c34670362963"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(4690),
                            Description = "Pregunta de SQL 1"
                        },
                        new
                        {
                            Id = new Guid("1e0db6a4-c93e-41a9-97cf-8cb0b47e24db"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(4693),
                            Description = "Pregunta de SQL 2"
                        },
                        new
                        {
                            Id = new Guid("4d1db6bb-a66f-4711-9225-4cbeeff08249"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(4696),
                            Description = "Pregunta de Procesamiento 1"
                        },
                        new
                        {
                            Id = new Guid("e59feaf8-9813-4b77-b34a-2fc379e5e59a"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(4699),
                            Description = "Pregunta de Procesamiento 2"
                        },
                        new
                        {
                            Id = new Guid("c1d6ceb7-313d-42a3-91d5-780aeb12dfca"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 487, DateTimeKind.Local).AddTicks(4702),
                            Description = "Pregunta de Procesamiento 3"
                        });
                });

            modelBuilder.Entity("SiadMV.DataAccess.Models.SiadMVDb.QuestionKeyFact", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("KeyFactId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.HasKey("QuestionId", "KeyFactId");

                    b.HasIndex("KeyFactId");

                    b.ToTable("QuestionKeyFact");

                    b.HasData(
                        new
                        {
                            QuestionId = new Guid("3c5f06e0-e33f-40fb-a43e-4224addd1671"),
                            KeyFactId = new Guid("4c338983-e027-4b32-9b37-19f9aa088174"),
                            Id = new Guid("a5e09e3c-c413-4aac-b8cc-0cb58ee7e005")
                        },
                        new
                        {
                            QuestionId = new Guid("4b72b1b6-f14b-43a0-8cee-b3824114eb35"),
                            KeyFactId = new Guid("4c338983-e027-4b32-9b37-19f9aa088174"),
                            Id = new Guid("b45cf9d8-fe14-4639-ac97-3f4a89a58b1f")
                        },
                        new
                        {
                            QuestionId = new Guid("b6fd88b0-0f5e-4b4b-ad4c-c45410d0379b"),
                            KeyFactId = new Guid("a414a9d7-836d-451e-8b11-950ff2d8f8ba"),
                            Id = new Guid("a020bb9e-b517-4b75-9541-1fad4f4b115b")
                        },
                        new
                        {
                            QuestionId = new Guid("68a5f73d-89d3-4eae-a229-c34670362963"),
                            KeyFactId = new Guid("d86f8287-40e6-4343-819f-adeb0104546c"),
                            Id = new Guid("f6471dc5-603f-45bd-aa6b-5e0ec68c8ed0")
                        },
                        new
                        {
                            QuestionId = new Guid("1e0db6a4-c93e-41a9-97cf-8cb0b47e24db"),
                            KeyFactId = new Guid("d86f8287-40e6-4343-819f-adeb0104546c"),
                            Id = new Guid("dc622982-95ac-42d3-b85d-b366649d0ad8")
                        },
                        new
                        {
                            QuestionId = new Guid("4d1db6bb-a66f-4711-9225-4cbeeff08249"),
                            KeyFactId = new Guid("b8776aa6-31b4-4125-8bfe-0a4e07d45d1b"),
                            Id = new Guid("950c3ae2-4733-4e08-bb95-0e79bef04737")
                        },
                        new
                        {
                            QuestionId = new Guid("e59feaf8-9813-4b77-b34a-2fc379e5e59a"),
                            KeyFactId = new Guid("b8776aa6-31b4-4125-8bfe-0a4e07d45d1b"),
                            Id = new Guid("3ea7d2bc-41d9-4693-b34e-268ffb3cc92c")
                        },
                        new
                        {
                            QuestionId = new Guid("c1d6ceb7-313d-42a3-91d5-780aeb12dfca"),
                            KeyFactId = new Guid("b8776aa6-31b4-4125-8bfe-0a4e07d45d1b"),
                            Id = new Guid("74855325-2e4b-4097-804b-45bd2d02d8f2")
                        });
                });

            modelBuilder.Entity("SiadMV.DataAccess.Models.SiadMVDb.UserCase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("UserCase");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c8deead-324b-429f-a283-4cc48c51305d"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 485, DateTimeKind.Local).AddTicks(9255),
                            Description = "Una organización de alrededor de 60 usuarios requiere un sistema de control de asistencia, el mismo debe ser web y accedido por la red interna de la empresa, se solicita que el frontend sea elaborado en PHP y el backend utiliza una base de datos. Además se solicita poder realizar una rápida recuperación en caso de un evento inesperado."
                        },
                        new
                        {
                            Id = new Guid("e21d8bfc-f99a-493a-a76e-5c53342ca8ad"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 486, DateTimeKind.Local).AddTicks(6694),
                            Description = "Aplicación instalada en dispositivos móviles Android utilizados por personal que realiza la toma de datos de clientes de la empresa fuera de esta, esta aplicación accede a una base de datos MS SQLServer, mediante webservices ejecutados en el mismo servidor intercambian información con el aplicativo de negocios."
                        },
                        new
                        {
                            Id = new Guid("a134d0cb-89ce-4fce-b0d0-95069f927ff5"),
                            CreationDate = new DateTime(2022, 6, 1, 16, 41, 33, 486, DateTimeKind.Local).AddTicks(6733),
                            Description = "Servicios de autenticación y almacenamiento de archivos común a toda la organización, la estructura de dominio es utilizada para autenticar varios servicios incluido el acceso a los diferentes aplicativos, el almacenamiento de archivos está formado por varios directorios compartidos según áreas con los permisos NTFS correspondientes por grupos y/o usuarios."
                        });
                });

            modelBuilder.Entity("SiadMV.DataAccess.Models.SiadMVDb.CommonExpressionKeyFact", b =>
                {
                    b.HasOne("SiadMV.DataAccess.Models.SiadMVDb.CommonExpression", "CommonExpresion")
                        .WithMany("KeysFact")
                        .HasForeignKey("CommonExpressionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiadMV.DataAccess.Models.SiadMVDb.KeyFact", "KeyFact")
                        .WithMany("CommonExpressions")
                        .HasForeignKey("KeyFactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiadMV.DataAccess.Models.SiadMVDb.QuestionKeyFact", b =>
                {
                    b.HasOne("SiadMV.DataAccess.Models.SiadMVDb.KeyFact", "KeyFact")
                        .WithMany("Questions")
                        .HasForeignKey("KeyFactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiadMV.DataAccess.Models.SiadMVDb.Question", "Question")
                        .WithMany("KeysFact")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
